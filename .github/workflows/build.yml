name: Build moonPy executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.12]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller PyQt5

      - name: Build executable on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          pyinstaller moonPy.py --name moonPy --onefile --windowed --noconfirm --clean --paths=. `
            --hidden-import=PyQt5.QtCore `
            --hidden-import=PyQt5.QtGui `
            --hidden-import=PyQt5.QtWidgets `
            --hidden-import=PyQt5.QtPrintSupport `
            --exclude-module=PySide6

      - name: Build executable on Linux/macOS
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          pyinstaller moonPy.py --name moonPy --onefile --windowed --noconfirm --clean --paths=. \
            --hidden-import=PyQt5.QtCore \
            --hidden-import=PyQt5.QtGui \
            --hidden-import=PyQt5.QtWidgets \
            --hidden-import=PyQt5.QtPrintSupport \
            --exclude-module=PySide6

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moonPy-${{ matrix.os }}
          path: dist/moonPy*

