name: Build Executable

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pyqt5 opencv-python-headless

      - name: Build executable
        shell: ${{ runner.os == 'Windows' && 'pwsh' || 'bash' }}
        run: ${{ runner.os == 'Windows' && '
          pyinstaller moonPy.py `
            --name moonPy `
            --onefile `
            --windowed `
            --noconfirm `
            --clean `
            --paths=. `
            --hidden-import=PyQt5.QtCore `
            --hidden-import=PyQt5.QtGui `
            --hidden-import=PyQt5.QtWidgets `
            --hidden-import=PyQt5.QtPrintSupport `
            --hidden-import=cv2 `
            --exclude-module=PySide6
          ' || '
          pyinstaller moonPy.py \
            --name moonPy \
            --onefile \
            --windowed \
            --noconfirm \
            --clean \
            --paths=. \
            --hidden-import=PyQt5.QtCore \
            --hidden-import=PyQt5.QtGui \
            --hidden-import=PyQt5.QtWidgets \
            --hidden-import=PyQt5.QtPrintSupport \
            --hidden-import=cv2 \
            --exclude-module=PySide6
          ' }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: moonPy-${{ matrix.os }}
          path: ${{ runner.os == 'Windows' && 'dist/moonPy.exe' || 'dist/moonPy' }}

